
export HAL=$(TOPDIR)/wlan/common/lmac/hal
export ENETDIR=$(TOPDIR)/linux/drivers/net/ag7100/
export ATH_TOOL_DIR=$(TOPDIR)/wlan/linux/tools/
export ATH_DFS=$(TOPDIR)/wlan/common/lmac/dfs
export BOOTLOADERDIR=$(TOPDIR)/boot/u-boot

#
# This is the specific makefile for the ap94 board.  It has dependancies for both
# the "common" build and the "jffs2" build.  This is unique for each board type, and
# must be configured for each board.
#

# To enable library optimization (removing unused object code from
# shared libraries) set BUILD_LIBRARYOPT to 'y' else 'n'
BUILD_LIBRARYOPT := y

ifeq ($(BUILD_CONFIG), _routing)
#ap94_build: common_fusion iptables_build fusion_build $(BUILD_TYPE)_build 
ap94_build: common_fusion iptables_build fusion_build $(BUILD_TYPE)_build gemtek_image
else
#ap94_build: common_fusion fusion_build $(BUILD_TYPE)_build 
ap94_build: common_fusion fusion_build $(BUILD_TYPE)_build gemtek_image
endif

ifeq ($(BUILD_WPA2),y) ##################################################
common_fusion: check_tftp rootfs_prep toolchain_build uimage \
	kernel_info uboot_fusion enet_build busybox_build wpa2 \
	sar art_mod cgi
else ################################################################
common_fusion: check_tftp rootfs_prep toolchain_build uimage \
	kernel_info uboot_fusion enet_build busybox_build wsc_fus \
	fus_supplicant sar art_mod cgi
endif

common_build: check_tftp rootfs_prep toolchain_build uimage \
	kernel_info uboot_fusion enet_build busybox_build wsc \
	wpa_supplicant sar

#
# Unique rules for the ag7100 PHY with the ar7100 (Hydra)  board
#

enet_build: kernel_build
	rm -f $(ENETDIR)proc.c
	ln -sf $(TOPDIR)/GTK/user/apps/GPIO/proc.c $(ENETDIR)/proc.c
	cd $(ENETDIR) && rm -f *.o *.ko *.mod.*
	$(MAKEARCH) -C $(KERNELPATH) SUBDIRS=$(ENETDIR) modules
	test -d $(MODULEPATH) || mkdir -p $(MODULEPATH)
	cp $(ENETDIR)/ag7100_mod.ko $(MODULEPATH)

iptables_build:
	@echo making iptables
	cd ../apps/iptables/iptables-1.3.6 && \
	$(MAKE) clean && \
	$(MAKE) KERNEL_DIR=$(KERNELPATH) && \
	$(TOOLPREFIX)strip iptables && \
	cp iptables $(INSTALL_ROOT)/sbin/iptables 

# WIRELESSTOOLNAMES must agree with wlan/linux/tools/Makefile
WIRELESSTOOLNAMES := athstats athstatsclear 80211stats athkey athchans athctrl\
	athdebug 80211debug wlanconfig athcwm athampdutrc atrc \
	pktlogconf pktlogdump radartool cgiMain
wireless_tools_fus:
	@echo making wireless_tools
	if test -n "$(WIRELESSTOOLS)"; then \
	cd ../apps/$(WIRELESSTOOLS); make clean; make; \
	cp -f $(WIRELESSTOOLSLIB) $(INSTALL_ROOT)/lib; \
	cp -f iwpriv $(INSTALL_ROOT)/sbin; \
	cp -f iwconfig $(INSTALL_ROOT)/sbin; \
	cp -f iwlist $(INSTALL_ROOT)/sbin; \
	ln -sfn $(WIRELESSTOOLSLIB) libiw.so ; \
	cd $(TOPDIR)/wlan/linux/tools && make clean; \
	make wlanconfig BUILD_STATIC=$(BUILD_STATIC); \
	cp -f wlanconfig $(INSTALL_ROOT)/sbin; \
	cd $(INSTALL_ROOT)/lib; ln -sfn $(WIRELESSTOOLSLIB) libiw.so ; \
	fi

ath_tools_fus: ath_tools_fus_clean
	@echo makeing ath tools;\
	cd ../wlan/linux/tools;\
	make ath_tools;

cgi: ath_tools_fus_clean
	@echo makeing cgi;\
	cd ../wlan/linux/tools;\
	rm -rf cgiMain;\
	make cgiMain;

ath_tools_fus_clean:
	@echo cleaning ath tools;\
	cd ../wlan/linux/tools;\
	make ath_tools_clean;

art_mod:
	@echo Making ART Module
#	cd ../apps/art && make -f makefile.soc.linux.mips clean && \
	make -f makefile.soc.linux.mips hydra
#	cp ../apps/art/modules/art.ko $(MODULEPATH)/art.ko

fusion_hal_build: 
	@echo making FUSION hal
	if test -n "$(FUSIONTARGET)"; then \
	cd $(HAL)/linux && \
	make TARGET=$(FUSIONTARGET) && \
	make TARGET=$(FUSIONTARGET) release; \
	fi

#fusion_build: fusion_hal_build wireless_tools_fus ath_tools_fus 
fusion_build: fusion_hal_build wireless_tools_fus ath_tools_fus gemtek_build
	@echo making fusion
	cd $(TOPDIR)/wlan/linux && \
	$(MAKEARCH) TARGET=$(FUSIONTARGET) && \
	$(MAKEARCH) DESTDIR=$(INSTALLROOT) TARGET=$(FUSIONTARGET) install
	$(MAKE) $(BUILD_TYPE)_build

uboot_fusion:
	@echo making uboot...
	cd $(BOOTLOADERDIR) && make ap94_config
	cd $(BOOTLOADERDIR) && make clean && make
	cp $(BOOTLOADERDIR)/u-boot.bin $(IMAGEPATH)

